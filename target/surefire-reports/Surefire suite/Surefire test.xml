<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="GOOGLE" failures="3" tests="23" name="Surefire test" time="4.085" errors="0" timestamp="2024-05-28T23:56:50 IST">
  <testcase classname="example06.EnableDisable.EnableDisableTestCase" name="@BeforeTest openBrowser" time="-1.716920810061E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browserName&amp;apos; is required by BeforeTest on method openBrowser but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browserName' is required by BeforeTest on method openBrowser but has not been marked @Optional or defined

... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="example06.EnableDisable.IgnoreTestCase" name="@BeforeTest openBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@BeforeClass lunchBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass lunchBrowser -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="example03.Assertions.TestngUsingHardAssert" name="@AfterTest AfterTestCaseRunning" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest AfterTestCaseRunning -->
  <testcase classname="example03.Assertions.TestngUsingSoftAssert" name="@AfterTest AfterTestCaseRunning" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest AfterTestCaseRunning -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="example06.EnableDisable.EnableDisableTestCase" name="@AfterTest closeBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase classname="example06.EnableDisable.IgnoreTestCase" name="@AfterTest closeBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase classname="example03.Assertions.TestngUsingHardAssert" name="validationUsingHardAssert" time="0.0">
    <skipped/>
  </testcase> <!-- validationUsingHardAssert -->
  <testcase classname="example03.Assertions.TestngUsingSoftAssert" name="validationUsingSoftAssert" time="0.0">
    <skipped/>
  </testcase> <!-- validationUsingSoftAssert -->
  <testcase classname="example04.ExecutionFlow.TestngExecutionFlow" name="testing" time="0.0">
    <skipped/>
  </testcase> <!-- testing -->
  <testcase classname="example06.EnableDisable.EnableDisableTestCase" name="loginUser" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;username&amp;apos; is required by @Test on method loginUser but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'username' is required by @Test on method loginUser but has not been marked @Optional or defined

at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- loginUser -->
  <testcase classname="example06.EnableDisable.EnableDisableTestCase" name="openUrl" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;baseUrl&amp;apos; is required by @Test on method openUrl but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'baseUrl' is required by @Test on method openUrl but has not been marked @Optional or defined

at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- openUrl -->
  <testcase classname="example06.EnableDisable.EnableDisableTestCase" name="veriftyPageTitle" time="0.0">
    <skipped/>
  </testcase> <!-- veriftyPageTitle -->
  <testcase classname="example06.EnableDisable.IgnoreTestCase" name="openUrl" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;baseUrl&amp;apos; is required by @Test on method openUrl but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'baseUrl' is required by @Test on method openUrl but has not been marked @Optional or defined

at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- openUrl -->
  <testcase classname="example06.EnableDisable.IgnoreTestCase" name="veriftyPageTitle" time="0.0">
    <skipped/>
  </testcase> <!-- veriftyPageTitle -->
  <testcase classname="example07.GroupTestCase.BingTestCase" name="A" time="0.0">
    <skipped/>
  </testcase> <!-- A -->
  <testcase classname="example07.GroupTestCase.BingTestCase" name="B" time="0.0">
    <skipped/>
  </testcase> <!-- B -->
  <testcase classname="example07.GroupTestCase.BingTestCase" name="C" time="0.0">
    <skipped/>
  </testcase> <!-- C -->
  <testcase classname="example07.GroupTestCase.GoogleTestCase" name="A" time="0.0">
    <skipped/>
  </testcase> <!-- A -->
  <testcase classname="example07.GroupTestCase.GoogleTestCase" name="B" time="0.0">
    <skipped/>
  </testcase> <!-- B -->
  <testcase classname="example07.GroupTestCase.GoogleTestCase" name="C" time="0.0">
    <skipped/>
  </testcase> <!-- C -->
  <testcase classname="example07.GroupTestCase.YandexTestCase" name="A" time="0.0">
    <skipped/>
  </testcase> <!-- A -->
  <testcase classname="example07.GroupTestCase.YandexTestCase" name="B" time="0.0">
    <skipped/>
  </testcase> <!-- B -->
  <testcase classname="example07.GroupTestCase.YandexTestCase" name="C" time="0.0">
    <skipped/>
  </testcase> <!-- C -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="loginPage" time="0.0">
    <skipped/>
  </testcase> <!-- loginPage -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="verifySuccessfullyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfullyLogin -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="verifyPageTitle" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPageTitle -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="verifyCurrentUrl" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCurrentUrl -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="verifyLogoutFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogoutFunctionality -->
  <testcase classname="example16.ExtentReports.TestCaseER" name="invalidUserLogin" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserLogin -->
  <testcase classname="example06.EnableDisable.IgnoreTestCase" name="loginUser" time="0.0">
    <ignored/>
  </testcase> <!-- loginUser -->
</testsuite> <!-- Surefire test -->
